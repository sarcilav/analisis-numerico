#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Part*
Splines
\end_layout

\begin_layout Section*
¿Que es un spline?
\end_layout

\begin_layout Standard
Para el análisis numérico un spline es la forma mediante la cual se puede
 definir una curva, mediante porciones de esta definidas por polinomios.
\end_layout

\begin_layout Standard
Los splines hacen referencia a una amplia clase de funciones que son utilizadas
 en aplicaciones que requieren la interpolación de datos, y/o un alisado
 en la interpolación.
 Los splines son utilizados para la interpolación y/o alisado de datos de
 una o varias dimensiones.
 Las funciones para la interpolación por splines normalmente se determinan
 como minimizadores de los cambios bruscos en las nubes de puntos.
 Y además se clasifican según su capacidad de alisar las nubes de puntos.
\end_layout

\begin_layout Section*
¿ Para que se usa?
\end_layout

\begin_layout Standard
Para el ajuste de curvas, los splines se utilizan para aproximar formas
 complicadas.
 La simplicidad de la representación y la facilidad de cómputo de los splines
 los hacen populares para la representación de curvas en informática, particular
mente en el terreno de los gráficos por ordenador.
\end_layout

\begin_layout Standard
Además son una muy buena forma de conseguir aproximaciones computacionales
 de objetos de la realidad, por ejemplo representar formas complejas como
 el cuero vaca, el cuerpo humano, y en general cualquier forma no trivial
 de representar mediante la composición de poliedros, polígonos, esferas
 y/o circulos.
 Y es por esto que herramientas de CAD/CAM que utilizan modelado, como rhinocero
s, solidworks, pro e y entre otros, hacen uso de estos para representar
 las complejas formas introducidas por los diseñadores, puesto que para
 la máquina solo existen elementos discretos, mientras que para ellos (diseñador
es) existen las formas llenas de curvas suaves, por lo que podemos decir
 que es una de las formas mediante las cuales la computación gráfica a logrado
 solventar el eterno dilema de lo análogo vs lo digital.
\end_layout

\begin_layout Standard
También es importante resaltar que los usos de los splines no solo se ve
 delimitado por la computación gráfica sino que también son usados en problemas
 de optimización en economía, en sistemas de corte y en general en cualquier
 sistema de ajuste de curvas.
 Puesto que las curvas son una serie infinita de puntos no numerable y que
 tan solo nos interese conocer las propiedades el compartimiento general
 de este conjunto.
\end_layout

\begin_layout Section*
Problema y solución que brindan los splines
\end_layout

\begin_layout Standard
En la vida real cuando intentamos realizar abtracciones de la realidad,
 tenemos que la reliadad es infinita en inmesurable y por lo tanto nuestros
 modelos son tan solo una pequeña muestra de esta, y es por eso que presisamos
 un medio para poder representarla de la mejor manera, por ejemplo en los
 ambientes que es necesario el reconocimiento de patrones, para estos dispositiv
os es imposible captar toda la realidad por lo que solo deben ser capaces
 de escojer los puntos mas significativos
\end_layout

\begin_layout Section*
Splines clásicos o trazadores
\end_layout

\begin_layout Standard
Los splines son también llamados trazadores puesto que su utilidad es: dada
 una serie de puntos, retornar el conjunto de polinomios que punto a punto
 me generan una curva suave que pasa por cada uno de estos.
 Por lo cual se pueden a semejar a aquellos juegos clásicos que dado una
 nube de puntos ordenados, se busca generar la figura escondida dentro de
 esta nube.
 
\end_layout

\begin_layout Subsection*
Lineales
\end_layout

\begin_layout Standard
Esta la forma mas simple.
 Para estos casos lo que se busca es interpolar una función 
\begin_inset ERT
status open

\begin_layout Plain Layout

$f(x)$
\end_layout

\end_inset

, con solo 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N$
\end_layout

\end_inset

 pares ordenados de la forma 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(x,f(x))$
\end_layout

\end_inset

, por los que debe pasar el trazador que obtengamos.
 Y como bien el nombre nos lo indica cada 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_i(x)$
\end_layout

\end_inset

 va hacer de la forma 
\begin_inset ERT
status open

\begin_layout Plain Layout

$ax+b$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Ahora bien definiremos por cada par de puntos consecutivos en el orden que
 nos entregaron un 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_i(x)$
\end_layout

\end_inset

, para un total de 
\begin_inset ERT
status open

\begin_layout Plain Layout

$N-1$
\end_layout

\end_inset

 segmentos de recta, haciendo pasar cada una de estas por los puntos que
 las definen, por lo tanto, la función 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P(x)$
\end_layout

\end_inset

 será una función por partes definida por el conjunto de los 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_i$
\end_layout

\end_inset

; es por ello que nuestra función será continua en dichos puntos, pero no
 derivable en general, por lo que no sera una curva suave, es decir que
 cumplimos solo con la parte de más trivial de los splines, nos queda por
 averiguar como es que funcionan los splines que suavizan la conexión entre
 los diferentes puntos.
\end_layout

\begin_layout Standard
Ejemplo : Dado los siguientes pares ordenados halle el spline.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$f(1) = 2$
\end_layout

\end_inset


,
\lang english

\begin_inset ERT
status open

\begin_layout Plain Layout

$f(3) = 1$
\end_layout

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$f(4) = 3$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora bien tenemos 3 puntos por lo tanto necesitamos calcular las 2 ecuaciones
 de rectas que me unen estos tres puntos.
\end_layout

\begin_layout Standard
Tenemos que:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_1(x) = ax + b$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
→
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_1(1) = 2 = a+b$
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_1(3) = 1 = 3a +b$ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
→
\begin_inset ERT
status open

\begin_layout Plain Layout

$a = -$${1}
\backslash
over{2}$
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout

$b = $$5
\backslash
over2$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
→
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_1(x) = $${5 - x}
\backslash
over{2}$ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/spline_simple_1.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
Ahora bien esta es la gráfica para 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_1(x)$
\end_layout

\end_inset

, pero ahora necesitamos calcular la siguiente trama.
 Para la cual tenemos:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_2(x) = ax + b$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
→
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_2(3) = 1 = 3a+b$
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_2(4) = 3 = 4a +b$ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
→
\begin_inset ERT
status open

\begin_layout Plain Layout

$a = 2$
\end_layout

\end_inset

 y 
\begin_inset ERT
status open

\begin_layout Plain Layout

$b = -5$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
→
\begin_inset ERT
status open

\begin_layout Plain Layout

$P_2(x) = 2x - 5$
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/spline_simple_2.png
	scale 70

\end_inset


\end_layout

\begin_layout Subsubsection*
Generalización
\end_layout

\begin_layout Standard
Para cada par de puntos adyancentes hay que resolver el siguiente sistema
 matricial:
\end_layout

\begin_layout Standard
\begin_inset Formula $\left[\begin{array}{cc}
x_{i-1} & 1\\
x_{i} & 1\end{array}\right]\left[\begin{array}{c}
a\\
b\end{array}\right]$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

$=$
\end_layout

\end_inset


\begin_inset Formula $\left[\begin{array}{c}
f(x_{i-1})\\
f(x_{i})\end{array}\right]$
\end_inset

 donde 
\begin_inset Formula $i\in\left[1,n-1\right]$
\end_inset

 que son los 
\begin_inset Formula $n-1$
\end_inset

 polinomios y 
\begin_inset Formula $\left[0,n-1\right]$
\end_inset

 que son los 
\begin_inset Formula $n$
\end_inset

 puntos.
\end_layout

\begin_layout Standard
De donde se puede obtener cada uno de los 
\begin_inset Formula $P_{i}(x)$
\end_inset

.
\end_layout

\begin_layout Subsection*
Cuadráticos
\end_layout

\begin_layout Standard
Un spline cuadrático es aquel que se aproxima a la función tramo por tramo,
 mediante ecuaciones de la forma 
\begin_inset Formula $P(x)=ax^{2}+bx+c$
\end_inset

, esta es la razón por la que se llaman cuadráticos pues son polinomios
 de grado 2.
\end_layout

\begin_layout Subsection*
Cúbicos
\end_layout

\begin_layout Section*
Splines para curvas cerradas
\end_layout

\begin_layout Standard
A simple impresión los spline cerrados, son tan solo un caso particular
 de los anteriormente mencionados, pero muchos de los algoritmos y/o métodos
 que se utilizan en los splines simples, no se pueden aplicar en los splines
 de este tipo, puesto que un spline cerrado consiste que el primer y ultimo
 punto coinciden, lo que genera un problema pues casi todos los métodos
 mencionados de splines se basan en que el primer y ultimo punto son difenrentes
 para poder obtener un sistema que no sea linealmente dependiente.
 Por eso es que vale la pena resaltar este caso particular.
\end_layout

\begin_layout Subsection*
B-spline
\end_layout

\begin_layout Standard
Los b-spline a diferencia de los spline no son trazadores puesto que no
 es necesario que pasen por todos los puntos que lo definen, sino que puede
 usar cada uno de esos puntos como un punto de control en vez como un punto
 de una función, por lo cual son curvas mucho más suavez (por ejemplo las
 curvas de Bezier).
\end_layout

\begin_layout Standard
Ahora bien los b-splines se pueden interpretar como splines parametricos
 que se redefinen a partir de un parametro 
\begin_inset Formula $t\in[0,1]$
\end_inset

, expresado como combinaciones lineales de los puntos de control, razón
 de que uno de los teoremas fundamentales en este campo exprese: que dada
 una función spline de un grado determinado (ejemplos: lineal,cuadrático,
 cúbico ...), suavidad, y distribución de los puntos, se puede representar
 como una combinación lineal de b-splines del mismo grado y suavidad, y
 sobre la misma distribución de los puntos.
 Es decir que para un b-spline existen puntos de anclaje (
\begin_inset Formula $P_{0},P_{n-1}$
\end_inset

) y puntos de control (
\begin_inset Formula $P_{1},P_{2},\cdots,P_{n-2}$
\end_inset

), y el parametro 
\begin_inset Formula $t$
\end_inset

 que indica que el punto que se calcula con ese 
\begin_inset Formula $t$
\end_inset

 esta al 
\begin_inset Formula $t*100\%$
\end_inset

 del punto inicial.
\end_layout

\begin_layout Standard
Ahora bien utilizaremos el mismo ejemplo de todo el documento para explicar
 como se utiliza un b-spline, haciendo uso del caso particular de las curvas
 de Bezier.
\end_layout

\begin_layout Standard
\begin_inset Formula \[
B(t)=\sum_{i=0}^{n}\binom{n}{i}P_{i}\left(1-t\right)^{n-i}t^{i}\]

\end_inset


\end_layout

\begin_layout Standard
Y para nuestro caso particular de 3 puntos tenemos.
\end_layout

\begin_layout Standard
\begin_inset Formula \[
B(t)=\sum_{i=0}^{2}\binom{2}{i}P_{i}\left(1-t\right)^{2-i}t^{i}=\left(1-t\right)^{2}P_{0}+2t\left(1-t\right)P_{1}+t^{2}P_{2}\]

\end_inset


\end_layout

\begin_layout Standard
Con 
\begin_inset Formula $P_{0}=\left(1,2\right),P_{1}=\left(3,1\right),P_{2}=\left(4,3\right)$
\end_inset

 y para poder visualizar como se comporta el b-spline a medida que avanza
 el 
\begin_inset Formula $t$
\end_inset

 tomaremos 
\begin_inset Formula $t_{i}=\left\{ 0.2,0.4,0.5,0.6,0.8,1\right\} $
\end_inset

, para cada intervalo se presentara en la gráfica con un color diferente.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/b-spline_1.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
t=0.2\Rightarrow B(0.2)=\left(1-0.2\right)^{2}P_{0}+2*0.2\left(1-0.2\right)P_{1}+0.2^{2}P_{2}=\left(1.760;1.720\right)\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/b-spline_2.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
t=0.4\Rightarrow B(0.4)=\left(1-0.4\right)^{2}P_{0}+2*0.4\left(1-0.4\right)P_{1}+0.4^{2}P_{2}=\left(2.439;1.680\right)\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/b-spline_3.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
t=0.6\Rightarrow B(0.6)=\left(1-0.6\right)^{2}P_{0}+2*0.6\left(1-0.6\right)P_{1}+0.6^{2}P_{2}=\left(3.039;1.880\right)\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/b-spline_4.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
t=0.8\Rightarrow B(0.8)=\left(1-0.8\right)^{2}P_{0}+2*0.8\left(1-0.8\right)P_{1}+0.8^{2}P_{2}=\left(3.559;2.319\right)\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/b-spline_5.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
t=1\Rightarrow B(1)=\left(1-1\right)^{2}P_{0}+2*1\left(1-1\right)P_{1}+1^{2}P_{2}=\left(4,3\right)\]

\end_inset


\end_layout

\begin_layout Standard
Obviamente las curvas que se muestran anteriormente se calculan con valores
 de 
\begin_inset Formula $t$
\end_inset

 muchos más pequeños para dar la sensación de continuidad, los valores de
 
\begin_inset Formula $t$
\end_inset

 era para mostrar como se va construye la gráfica paso a paso.
\end_layout

\begin_layout Subsection*
Naturales
\end_layout

\begin_layout Section*
Conclusiones y selección del método
\end_layout

\begin_layout Section*
Seudocódigo
\end_layout

\begin_layout Section*
Análisis de complejidad
\end_layout

\begin_layout Section*
Implementación 
\end_layout

\end_body
\end_document
